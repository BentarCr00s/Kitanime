extends layout

block content
  div(class="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900")
    div(class="container mx-auto px-6 py-8")
      div(class="grid grid-cols-1 lg:grid-cols-4 gap-8")
        div(class="lg:col-span-3 space-y-8")
          // Anime Info Card
          div(class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-3xl shadow-xl overflow-hidden border border-white/20 dark:border-gray-700/30 transition-all duration-500 hover:shadow-2xl")
            div(class="md:flex")
              div(class="md:flex-shrink-0 relative group")
                img(src=anime.poster alt=anime.title class="h-64 w-full object-cover md:h-full md:w-56 transition-transform duration-500 transform rounded-l-3xl group-hover:scale-105" onerror="this.onerror=null;this.src='https://placehold.co/400x600?text=No+Image';")
                div(class="absolute inset-0 bg-gradient-to-t from-black/20 via-transparent to-transparent dark:from-white/10 dark:via-transparent dark:to-transparent")
                if anime.batch_links && anime.batch_links.length > 0
                  div(class="absolute top-4 right-4")
                    a(href=`/anime/${anime.slug}/batch` class="inline-flex items-center space-x-2 bg-gradient-to-r from-emerald-500 to-teal-600 text-white px-4 py-2 rounded-2xl text-sm font-bold shadow-lg backdrop-blur-sm hover:from-emerald-600 hover:to-teal-700 transition-all duration-300 hover:scale-105")
                      svg(class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                        path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z")
                      span Download Batch
              
              div(class="p-8 flex-1 flex flex-col justify-between")
                div
                  h1(class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4 line-clamp-2 leading-tight")= anime.title
                  
                  div(class="flex flex-wrap gap-3 mb-6")
                    if anime.status
                      span(class="inline-flex items-center px-4 py-2 rounded-2xl text-sm font-bold bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg backdrop-blur-sm")= anime.status
                    if anime.rating
                      div(class="flex items-center px-4 py-2 bg-gradient-to-r from-yellow-500 to-orange-600 text-white rounded-2xl text-sm font-bold shadow-lg backdrop-blur-sm")
                        svg(class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20")
                          path(d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z")
                        span= anime.rating
                    if anime.release_year
                      span(class="px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-2xl text-sm font-medium")= anime.release_year
                  
                  if anime.genres && anime.genres.length > 0
                    div(class="mb-6")
                      h3(class="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center")
                        svg(class="w-4 h-4 mr-2 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z")
                        span Genre:
                      div(class="flex flex-wrap gap-2")
                        each genre in anime.genres
                          a(href=`/genres/${genre.slug}` class="px-3 py-2 bg-gradient-to-r from-purple-100 to-pink-100 dark:from-purple-900/30 dark:to-pink-900/30 text-purple-700 dark:text-purple-300 text-sm rounded-2xl hover:from-purple-200 hover:to-pink-200 dark:hover:from-purple-800/50 dark:hover:to-pink-800/50 hover:text-purple-800 dark:hover:text-purple-200 transition-all duration-300 hover:scale-105 border border-purple-200/50 dark:border-purple-700/30")= genre.slug
                  
                  if anime.synopsis
                    div(class="mb-6")
                      h3(class="text-sm font-semibold text-gray-700 dark:text-gray-300 mb-3 flex items-center")
                        svg(class="w-4 h-4 mr-2 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z")
                        span Sinopsis:
                      p(class="text-gray-600 dark:text-gray-300 text-sm leading-relaxed")= anime.synopsis
                  
                  div(class="flex flex-wrap gap-4 mt-6")
                    if anime.batch_links && anime.batch_links.length > 0
                      a(href=`/anime/${anime.slug}/batch` class="inline-flex items-center space-x-2 bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 text-white px-6 py-3 rounded-2xl font-semibold transition-all duration-300 hover:scale-105 hover:shadow-lg")
                        svg(class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                          path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z")
                        span Download Batch

          // Episodes Section
          if anime.episodes && anime.episodes.length > 0
            div(class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-3xl shadow-xl p-8 border border-white/20 dark:border-gray-700/30 transition-all duration-500 hover:shadow-2xl")
              div(class="flex items-center space-x-3 mb-6")
                div(class="w-1 h-8 bg-gradient-to-b from-blue-500 to-purple-600 rounded-full")
                h2(class="text-2xl font-bold text-gray-900 dark:text-gray-100") Daftar Episode
                span(class="bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 px-3 py-1 rounded-full text-sm font-medium")= anime.episodes.length + ' Episode'
              
              div(class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-6")
                each episode in anime.episodes.slice(0, 24)
                  a(href=`/anime/${anime.slug}/episode/${episode.episode}` class="group bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 hover:from-blue-100 hover:to-purple-100 dark:hover:from-blue-800/30 dark:hover:to-purple-800/30 border-2 border-blue-200 dark:border-blue-700 hover:border-blue-400 dark:hover:border-blue-500 rounded-2xl p-4 text-center transition-all duration-300 hover:scale-105 hover:shadow-lg")
                    div(class="text-sm font-bold text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200") Episode #{episode.episode}
                    if episode.release_date
                      div(class="text-xs text-gray-500 dark:text-gray-400 mt-2")= episode.release_date
              
              if anime.episodes.length > 24
                div(class="text-center")
                  a(href=`/anime/${anime.slug}/episodes` class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-2xl font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg")
                    span Lihat Semua Episode
                    svg(class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                      path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7")

        div(class="lg:col-span-1 space-y-8")
          // Anime Info Sidebar
          div(class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-3xl shadow-xl p-8 border border-white/20 dark:border-gray-700/30 transition-all duration-500 hover:shadow-2xl")
            h3(class="font-bold text-gray-900 dark:text-gray-100 mb-6 flex items-center text-lg")
              svg(class="w-6 h-6 mr-3 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z")
              span Informasi Anime
            div(class="space-y-4 text-sm")
              if anime.title
                div(class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-2xl")
                  span(class="font-medium text-blue-800 dark:text-blue-200") Judul:
                  span(class="text-blue-700 dark:text-blue-300 text-right max-w-[120px] truncate")= anime.title
              if anime.status
                div(class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-2xl")
                  span(class="font-medium text-blue-800 dark:text-blue-200") Status:
                  span(class="text-blue-700 dark:text-blue-300")= anime.status
              if anime.release_year
                div(class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-2xl")
                  span(class="font-medium text-blue-800 dark:text-blue-200") Tahun:
                  span(class="text-blue-700 dark:text-blue-300")= anime.release_year
              if anime.rating
                div(class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-2xl")
                  span(class="font-medium text-blue-800 dark:text-blue-200") Rating:
                  span(class="text-blue-700 dark:text-blue-300")= anime.rating
              if anime.episodes && anime.episodes.length > 0
                div(class="flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-2xl")
                  span(class="font-medium text-blue-800 dark:text-blue-200") Total Episode:
                  span(class="text-blue-700 dark:text-blue-300")= anime.episodes.length

          // Share Section
          div(class="bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-3xl shadow-xl p-8 border border-white/20 dark:border-gray-700/30 transition-all duration-500 hover:shadow-2xl")
            h3(class="font-bold text-gray-900 dark:text-gray-100 mb-6 flex items-center text-lg")
              svg(class="w-6 h-6 mr-3 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z")
              span Bagikan Anime
            div(class="space-y-4")
              button(onclick=`shareToFacebook('${anime.title}')` class="w-full bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white py-3 px-4 rounded-2xl text-sm font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2")
                svg(class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24")
                  path(d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z")
                span Facebook
              button(onclick=`shareToTwitter('${anime.title}')` class="w-full bg-gradient-to-r from-sky-500 to-sky-600 hover:from-sky-600 hover:to-sky-700 text-white py-3 px-4 rounded-2xl text-sm font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2")
                svg(class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24")
                  path(d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z")
                span Twitter
              button(onclick="copyToClipboard()" class="w-full bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white py-3 px-4 rounded-2xl text-sm font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg flex items-center justify-center space-x-2")
                svg(class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                  path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z")
                span Copy Link

          // Similar Anime Sidebar
          div(class="bg-white/90 dark:bg-gray-800/90 backdrop-blur-xl rounded-3xl shadow-xl p-8 border border-white/30 dark:border-gray-600/40 transition-all duration-500 hover:shadow-2xl")
            h3(class="font-bold text-gray-800 dark:text-gray-100 mb-6 flex items-center text-lg")
              svg(class="w-6 h-6 mr-3 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24")
                path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z")
            span Anime Serupa
          div(class="space-y-4")
            div(class="text-center py-8")
              div(class="w-16 h-16 mx-auto mb-4 text-gray-400 dark:text-gray-500")
                svg(fill="none" stroke="currentColor" viewBox="0 0 24 24")
                  path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33")
              p(class="text-gray-500 dark:text-gray-400 text-sm") Belum ada rekomendasi anime serupa

  // Scroll to Top Button
  button(id="scrollToTop" class="fixed bottom-8 right-8 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white p-4 rounded-full shadow-2xl hover:shadow-blue-500/25 transition-all duration-300 hover:scale-110 opacity-0 invisible z-50")
    svg(class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24")
      path(stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18")

block scripts
  script.
    // Enhanced anime card animations
    document.addEventListener('DOMContentLoaded', function() {
      const animeCards = document.querySelectorAll('.anime-card');
      
      // Stagger animation for cards
      animeCards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        
        setTimeout(() => {
          card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
          card.style.opacity = '1';
          card.style.transform = 'translateY(0)';
        }, index * 100);
      });
    });

    // Smooth scrolling functionality
    document.addEventListener('DOMContentLoaded', function() {
      // Smooth scroll for all internal links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // Scroll to top button functionality
      const scrollToTopBtn = document.getElementById('scrollToTop');
      
      // Show/hide scroll to top button
      window.addEventListener('scroll', function() {
        if (window.pageYOffset > 300) {
          scrollToTopBtn.classList.remove('opacity-0', 'invisible');
          scrollToTopBtn.classList.add('opacity-100', 'visible');
        } else {
          scrollToTopBtn.classList.add('opacity-0', 'invisible');
          scrollToTopBtn.classList.remove('opacity-100', 'visible');
        }
      });

      // Smooth scroll to top when button is clicked
      scrollToTopBtn.addEventListener('click', function() {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });

      // Enhanced smooth scroll for all links
      document.querySelectorAll('a').forEach(link => {
        if (link.href && link.href.includes(window.location.origin)) {
          link.addEventListener('click', function(e) {
            // Only apply smooth scroll for same-page navigation
            if (this.href.includes('#')) {
              e.preventDefault();
              const targetId = this.href.split('#')[1];
              const targetElement = document.getElementById(targetId);
              if (targetElement) {
                targetElement.scrollIntoView({
                  behavior: 'smooth',
                  block: 'start'
                });
              }
            }
          });
        }
      });
    });

    // Smooth scroll behavior for the entire page
    document.documentElement.style.scrollBehavior = 'smooth';
    
    // Enhanced scroll animations
    window.addEventListener('scroll', function() {
      const scrolled = window.pageYOffset;
      const parallaxElements = document.querySelectorAll('.hero-header');
      
      parallaxElements.forEach(element => {
        const speed = 0.5;
        element.style.transform = `translateY(${scrolled * speed}px)`;
      });
    });

    // Smooth scroll for mobile devices
    if ('ontouchstart' in window) {
      document.documentElement.style.scrollBehavior = 'smooth';
    }

    // Enhanced share functionality
    function shareEpisode() {
      if (navigator.share) {
        navigator.share({
          title: 'Tonton Anime',
          text: 'Tonton anime favorit Anda di KitaNime',
          url: window.location.href
        });
      } else {
        copyEpisodeLink();
      }
    }

    function copyEpisodeLink() {
      const url = window.location.href;
      if (navigator.clipboard) {
        navigator.clipboard.writeText(url).then(() => {
          showNotification('Link berhasil disalin!', 'success');
        });
      } else {
        fallbackCopyTextToClipboard(url);
      }
    }

    function fallbackCopyTextToClipboard(text) {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      try {
        document.execCommand('copy');
        showNotification('Link berhasil disalin!', 'success');
      } catch (err) {
        showNotification('Gagal menyalin link', 'error');
      }
      
      document.body.removeChild(textArea);
    }

    function showNotification(message, type) {
      const notification = document.createElement('div');
      notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 transition-all duration-300 ${
        type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
      }`;
      notification.textContent = message;
      
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
          document.body.removeChild(notification);
        }, 300);
      }, 2000);
    }

    if ('IntersectionObserver' in window) {
      const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const img = entry.target;
            if (img.dataset.src) {
              img.src = img.dataset.src;
              img.classList.remove('lazy');
              imageObserver.unobserve(img);
            }
          }
        });
      });

      document.querySelectorAll('img[data-src]').forEach(img => {
        imageObserver.observe(img);
      });
    }
